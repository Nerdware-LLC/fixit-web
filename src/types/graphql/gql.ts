/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n  fragment ContactFields on Contact {\n    id\n    email\n    phone\n    profile {\n      ...ProfileFields\n    }\n    createdAt\n  }\n  \n": types.ContactFieldsFragmentDoc,
    "\n  mutation CreateContact($contactEmail: Email!) {\n    createContact(contactEmail: $contactEmail) {\n      ...ContactFields\n    }\n  }\n  \n": types.CreateContactDocument,
    "\n  mutation DeleteContact($contactEmail: Email!) {\n    deleteContact(contactEmail: $contactEmail) {\n      id\n      wasDeleted\n    }\n  }\n": types.DeleteContactDocument,
    "\n  query Contact($contactID: ID!) {\n    contact(contactID: $contactID) {\n      ...ContactFields\n    }\n  }\n  \n": types.ContactDocument,
    "\n  query MyContacts {\n    myContacts {\n      ...ContactFields\n    }\n  }\n  \n": types.MyContactsDocument,
    "\n  fragment FixitUserFields on FixitUser {\n    ... on User {\n      ...PublicUserFields\n    }\n    ... on Contact {\n      ...ContactFields\n    }\n  }\n  \n  \n": types.FixitUserFieldsFragmentDoc,
    "\n  fragment InvoiceFields on Invoice {\n    id\n    createdBy {\n      ...FixitUserFields\n    }\n    assignedTo {\n      ...FixitUserFields\n    }\n    amount\n    status\n    stripePaymentIntentID\n    createdAt\n  }\n  \n": types.InvoiceFieldsFragmentDoc,
    "\n  fragment InvoiceWithWorkOrderFields on Invoice {\n    ...InvoiceFields\n    workOrder {\n      ...WorkOrderFields\n    }\n  }\n  \n  \n": types.InvoiceWithWorkOrderFieldsFragmentDoc,
    "\n  mutation CreateInvoice($invoice: InvoiceInput!) {\n    createInvoice(invoice: $invoice) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n": types.CreateInvoiceDocument,
    "\n  mutation UpdateInvoiceAmount($invoiceID: ID!, $amount: Int!) {\n    updateInvoiceAmount(invoiceID: $invoiceID, amount: $amount) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n": types.UpdateInvoiceAmountDocument,
    "\n  mutation PayInvoice($invoiceID: ID!) {\n    payInvoice(invoiceID: $invoiceID) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n": types.PayInvoiceDocument,
    "\n  mutation DeleteInvoice($invoiceID: ID!) {\n    deleteInvoice(invoiceID: $invoiceID) {\n      id\n      wasDeleted\n    }\n  }\n": types.DeleteInvoiceDocument,
    "\n  query Invoice($invoiceID: ID!) {\n    invoice(invoiceID: $invoiceID) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n": types.InvoiceDocument,
    "\n  query Invoices {\n    myInvoices {\n      createdByUser {\n        ...InvoiceFields\n      }\n      assignedToUser {\n        ...InvoiceFields\n      }\n    }\n  }\n  \n": types.InvoicesDocument,
    "\n  fragment PhoneContactFields on PhoneContact {\n    isUser\n    id\n    name\n    phone\n    email\n    givenName\n    familyName\n    businessName\n    photoUrl\n  }\n": types.PhoneContactFieldsFragmentDoc,
    "\n  query SearchUsers($rawPhoneContacts: [RawPhoneContactInput!]!) {\n    searchUsers(rawPhoneContacts: $rawPhoneContacts) {\n      ...PhoneContactFields\n    }\n  }\n  \n": types.SearchUsersDocument,
    "\n  fragment ProfileFields on Profile {\n    displayName\n    givenName\n    familyName\n    businessName\n    photoUrl\n  }\n": types.ProfileFieldsFragmentDoc,
    "\n  mutation UpdateProfile($profile: ProfileInput!) {\n    updateProfile(profile: $profile) {\n      ...ProfileFields\n    }\n  }\n  \n": types.UpdateProfileDocument,
    "\n  query MyProfile {\n    myProfile {\n      ...ProfileFields\n    }\n  }\n  \n": types.MyProfileDocument,
    "\n  fragment StripeConnectAccountFields on UserStripeConnectAccount {\n    id\n    detailsSubmitted\n    chargesEnabled\n    payoutsEnabled\n  }\n": types.StripeConnectAccountFieldsFragmentDoc,
    "\n  fragment PublicUserFields on User {\n    email\n    phone\n    profile {\n      ...ProfileFields\n    }\n  }\n  \n": types.PublicUserFieldsFragmentDoc,
    "\n  fragment PrivateUserFields on User {\n    id\n    stripeCustomerID\n    stripeConnectAccount {\n      ...StripeConnectAccountFields\n    }\n    subscription {\n      ...UserSubscriptionFields\n    }\n    ...PublicUserFields\n    createdAt\n  }\n  \n  \n  \n": types.PrivateUserFieldsFragmentDoc,
    "\n  fragment AuthTokenFields on User {\n    id\n    email\n    phone\n    stripeCustomerID\n    stripeConnectAccount {\n      ...StripeConnectAccountFields\n    }\n    subscription {\n      ...UserSubscriptionAuthTokenFields\n    }\n  }\n  \n  \n": types.AuthTokenFieldsFragmentDoc,
    "\n  query UserPrivateFields {\n    user {\n      ...PrivateUserFields\n    }\n  }\n  \n": types.UserPrivateFieldsDocument,
    "\n  query UserAuthTokenFields {\n    user {\n      ...AuthTokenFields\n    }\n  }\n  \n": types.UserAuthTokenFieldsDocument,
    "\n  fragment UserSubscriptionFields on UserSubscription {\n    id\n    status\n    currentPeriodEnd\n    productID\n    priceID\n    createdAt\n  }\n": types.UserSubscriptionFieldsFragmentDoc,
    "\n  fragment UserSubscriptionAuthTokenFields on UserSubscription {\n    id\n    status\n    currentPeriodEnd\n  }\n": types.UserSubscriptionAuthTokenFieldsFragmentDoc,
    "\n  fragment WorkOrderFields on WorkOrder {\n    id\n    createdBy {\n      ...FixitUserFields\n    }\n    assignedTo {\n      ...FixitUserFields\n    }\n    status\n    priority\n    location {\n      country\n      region\n      city\n      streetLine1\n      streetLine2\n    }\n    category\n    description\n    checklist {\n      id\n      description\n      isCompleted\n    }\n    dueDate\n    entryContact\n    entryContactPhone\n    scheduledDateTime\n    contractorNotes\n    createdAt\n  }\n  \n": types.WorkOrderFieldsFragmentDoc,
    "\n  mutation CreateWorkOrder($workOrder: CreateWorkOrderInput!) {\n    createWorkOrder(workOrder: $workOrder) {\n      ...WorkOrderFields\n    }\n  }\n  \n": types.CreateWorkOrderDocument,
    "\n  mutation UpdateWorkOrder($workOrderID: ID!, $workOrder: UpdateWorkOrderInput!) {\n    updateWorkOrder(workOrderID: $workOrderID, workOrder: $workOrder) {\n      ...WorkOrderFields\n    }\n  }\n  \n": types.UpdateWorkOrderDocument,
    "\n  mutation CancelWorkOrder($workOrderID: ID!) {\n    cancelWorkOrder(workOrderID: $workOrderID) {\n      ... on DeleteMutationResponse {\n        id\n        wasDeleted\n      }\n      ... on WorkOrder {\n        ...WorkOrderFields\n      }\n    }\n  }\n  \n": types.CancelWorkOrderDocument,
    "\n  mutation SetWorkOrderStatusComplete($workOrderID: ID!) {\n    setWorkOrderStatusComplete(workOrderID: $workOrderID) {\n      ...WorkOrderFields\n    }\n  }\n  \n": types.SetWorkOrderStatusCompleteDocument,
    "\n  query WorkOrder($workOrderID: ID!) {\n    workOrder(workOrderID: $workOrderID) {\n      ...WorkOrderFields\n    }\n  }\n  \n": types.WorkOrderDocument,
    "\n  query MyWorkOrders {\n    myWorkOrders {\n      createdByUser {\n        ...WorkOrderFields\n      }\n      assignedToUser {\n        ...WorkOrderFields\n      }\n    }\n  }\n  \n": types.MyWorkOrdersDocument,
};

export function graphql(source: "\n  fragment ContactFields on Contact {\n    id\n    email\n    phone\n    profile {\n      ...ProfileFields\n    }\n    createdAt\n  }\n  \n"): (typeof documents)["\n  fragment ContactFields on Contact {\n    id\n    email\n    phone\n    profile {\n      ...ProfileFields\n    }\n    createdAt\n  }\n  \n"];
export function graphql(source: "\n  mutation CreateContact($contactEmail: Email!) {\n    createContact(contactEmail: $contactEmail) {\n      ...ContactFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation CreateContact($contactEmail: Email!) {\n    createContact(contactEmail: $contactEmail) {\n      ...ContactFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation DeleteContact($contactEmail: Email!) {\n    deleteContact(contactEmail: $contactEmail) {\n      id\n      wasDeleted\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteContact($contactEmail: Email!) {\n    deleteContact(contactEmail: $contactEmail) {\n      id\n      wasDeleted\n    }\n  }\n"];
export function graphql(source: "\n  query Contact($contactID: ID!) {\n    contact(contactID: $contactID) {\n      ...ContactFields\n    }\n  }\n  \n"): (typeof documents)["\n  query Contact($contactID: ID!) {\n    contact(contactID: $contactID) {\n      ...ContactFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  query MyContacts {\n    myContacts {\n      ...ContactFields\n    }\n  }\n  \n"): (typeof documents)["\n  query MyContacts {\n    myContacts {\n      ...ContactFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  fragment FixitUserFields on FixitUser {\n    ... on User {\n      ...PublicUserFields\n    }\n    ... on Contact {\n      ...ContactFields\n    }\n  }\n  \n  \n"): (typeof documents)["\n  fragment FixitUserFields on FixitUser {\n    ... on User {\n      ...PublicUserFields\n    }\n    ... on Contact {\n      ...ContactFields\n    }\n  }\n  \n  \n"];
export function graphql(source: "\n  fragment InvoiceFields on Invoice {\n    id\n    createdBy {\n      ...FixitUserFields\n    }\n    assignedTo {\n      ...FixitUserFields\n    }\n    amount\n    status\n    stripePaymentIntentID\n    createdAt\n  }\n  \n"): (typeof documents)["\n  fragment InvoiceFields on Invoice {\n    id\n    createdBy {\n      ...FixitUserFields\n    }\n    assignedTo {\n      ...FixitUserFields\n    }\n    amount\n    status\n    stripePaymentIntentID\n    createdAt\n  }\n  \n"];
export function graphql(source: "\n  fragment InvoiceWithWorkOrderFields on Invoice {\n    ...InvoiceFields\n    workOrder {\n      ...WorkOrderFields\n    }\n  }\n  \n  \n"): (typeof documents)["\n  fragment InvoiceWithWorkOrderFields on Invoice {\n    ...InvoiceFields\n    workOrder {\n      ...WorkOrderFields\n    }\n  }\n  \n  \n"];
export function graphql(source: "\n  mutation CreateInvoice($invoice: InvoiceInput!) {\n    createInvoice(invoice: $invoice) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation CreateInvoice($invoice: InvoiceInput!) {\n    createInvoice(invoice: $invoice) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation UpdateInvoiceAmount($invoiceID: ID!, $amount: Int!) {\n    updateInvoiceAmount(invoiceID: $invoiceID, amount: $amount) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation UpdateInvoiceAmount($invoiceID: ID!, $amount: Int!) {\n    updateInvoiceAmount(invoiceID: $invoiceID, amount: $amount) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation PayInvoice($invoiceID: ID!) {\n    payInvoice(invoiceID: $invoiceID) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation PayInvoice($invoiceID: ID!) {\n    payInvoice(invoiceID: $invoiceID) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation DeleteInvoice($invoiceID: ID!) {\n    deleteInvoice(invoiceID: $invoiceID) {\n      id\n      wasDeleted\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteInvoice($invoiceID: ID!) {\n    deleteInvoice(invoiceID: $invoiceID) {\n      id\n      wasDeleted\n    }\n  }\n"];
export function graphql(source: "\n  query Invoice($invoiceID: ID!) {\n    invoice(invoiceID: $invoiceID) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  query Invoice($invoiceID: ID!) {\n    invoice(invoiceID: $invoiceID) {\n      ...InvoiceWithWorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  query Invoices {\n    myInvoices {\n      createdByUser {\n        ...InvoiceFields\n      }\n      assignedToUser {\n        ...InvoiceFields\n      }\n    }\n  }\n  \n"): (typeof documents)["\n  query Invoices {\n    myInvoices {\n      createdByUser {\n        ...InvoiceFields\n      }\n      assignedToUser {\n        ...InvoiceFields\n      }\n    }\n  }\n  \n"];
export function graphql(source: "\n  fragment PhoneContactFields on PhoneContact {\n    isUser\n    id\n    name\n    phone\n    email\n    givenName\n    familyName\n    businessName\n    photoUrl\n  }\n"): (typeof documents)["\n  fragment PhoneContactFields on PhoneContact {\n    isUser\n    id\n    name\n    phone\n    email\n    givenName\n    familyName\n    businessName\n    photoUrl\n  }\n"];
export function graphql(source: "\n  query SearchUsers($rawPhoneContacts: [RawPhoneContactInput!]!) {\n    searchUsers(rawPhoneContacts: $rawPhoneContacts) {\n      ...PhoneContactFields\n    }\n  }\n  \n"): (typeof documents)["\n  query SearchUsers($rawPhoneContacts: [RawPhoneContactInput!]!) {\n    searchUsers(rawPhoneContacts: $rawPhoneContacts) {\n      ...PhoneContactFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  fragment ProfileFields on Profile {\n    displayName\n    givenName\n    familyName\n    businessName\n    photoUrl\n  }\n"): (typeof documents)["\n  fragment ProfileFields on Profile {\n    displayName\n    givenName\n    familyName\n    businessName\n    photoUrl\n  }\n"];
export function graphql(source: "\n  mutation UpdateProfile($profile: ProfileInput!) {\n    updateProfile(profile: $profile) {\n      ...ProfileFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation UpdateProfile($profile: ProfileInput!) {\n    updateProfile(profile: $profile) {\n      ...ProfileFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  query MyProfile {\n    myProfile {\n      ...ProfileFields\n    }\n  }\n  \n"): (typeof documents)["\n  query MyProfile {\n    myProfile {\n      ...ProfileFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  fragment StripeConnectAccountFields on UserStripeConnectAccount {\n    id\n    detailsSubmitted\n    chargesEnabled\n    payoutsEnabled\n  }\n"): (typeof documents)["\n  fragment StripeConnectAccountFields on UserStripeConnectAccount {\n    id\n    detailsSubmitted\n    chargesEnabled\n    payoutsEnabled\n  }\n"];
export function graphql(source: "\n  fragment PublicUserFields on User {\n    email\n    phone\n    profile {\n      ...ProfileFields\n    }\n  }\n  \n"): (typeof documents)["\n  fragment PublicUserFields on User {\n    email\n    phone\n    profile {\n      ...ProfileFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  fragment PrivateUserFields on User {\n    id\n    stripeCustomerID\n    stripeConnectAccount {\n      ...StripeConnectAccountFields\n    }\n    subscription {\n      ...UserSubscriptionFields\n    }\n    ...PublicUserFields\n    createdAt\n  }\n  \n  \n  \n"): (typeof documents)["\n  fragment PrivateUserFields on User {\n    id\n    stripeCustomerID\n    stripeConnectAccount {\n      ...StripeConnectAccountFields\n    }\n    subscription {\n      ...UserSubscriptionFields\n    }\n    ...PublicUserFields\n    createdAt\n  }\n  \n  \n  \n"];
export function graphql(source: "\n  fragment AuthTokenFields on User {\n    id\n    email\n    phone\n    stripeCustomerID\n    stripeConnectAccount {\n      ...StripeConnectAccountFields\n    }\n    subscription {\n      ...UserSubscriptionAuthTokenFields\n    }\n  }\n  \n  \n"): (typeof documents)["\n  fragment AuthTokenFields on User {\n    id\n    email\n    phone\n    stripeCustomerID\n    stripeConnectAccount {\n      ...StripeConnectAccountFields\n    }\n    subscription {\n      ...UserSubscriptionAuthTokenFields\n    }\n  }\n  \n  \n"];
export function graphql(source: "\n  query UserPrivateFields {\n    user {\n      ...PrivateUserFields\n    }\n  }\n  \n"): (typeof documents)["\n  query UserPrivateFields {\n    user {\n      ...PrivateUserFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  query UserAuthTokenFields {\n    user {\n      ...AuthTokenFields\n    }\n  }\n  \n"): (typeof documents)["\n  query UserAuthTokenFields {\n    user {\n      ...AuthTokenFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  fragment UserSubscriptionFields on UserSubscription {\n    id\n    status\n    currentPeriodEnd\n    productID\n    priceID\n    createdAt\n  }\n"): (typeof documents)["\n  fragment UserSubscriptionFields on UserSubscription {\n    id\n    status\n    currentPeriodEnd\n    productID\n    priceID\n    createdAt\n  }\n"];
export function graphql(source: "\n  fragment UserSubscriptionAuthTokenFields on UserSubscription {\n    id\n    status\n    currentPeriodEnd\n  }\n"): (typeof documents)["\n  fragment UserSubscriptionAuthTokenFields on UserSubscription {\n    id\n    status\n    currentPeriodEnd\n  }\n"];
export function graphql(source: "\n  fragment WorkOrderFields on WorkOrder {\n    id\n    createdBy {\n      ...FixitUserFields\n    }\n    assignedTo {\n      ...FixitUserFields\n    }\n    status\n    priority\n    location {\n      country\n      region\n      city\n      streetLine1\n      streetLine2\n    }\n    category\n    description\n    checklist {\n      id\n      description\n      isCompleted\n    }\n    dueDate\n    entryContact\n    entryContactPhone\n    scheduledDateTime\n    contractorNotes\n    createdAt\n  }\n  \n"): (typeof documents)["\n  fragment WorkOrderFields on WorkOrder {\n    id\n    createdBy {\n      ...FixitUserFields\n    }\n    assignedTo {\n      ...FixitUserFields\n    }\n    status\n    priority\n    location {\n      country\n      region\n      city\n      streetLine1\n      streetLine2\n    }\n    category\n    description\n    checklist {\n      id\n      description\n      isCompleted\n    }\n    dueDate\n    entryContact\n    entryContactPhone\n    scheduledDateTime\n    contractorNotes\n    createdAt\n  }\n  \n"];
export function graphql(source: "\n  mutation CreateWorkOrder($workOrder: CreateWorkOrderInput!) {\n    createWorkOrder(workOrder: $workOrder) {\n      ...WorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation CreateWorkOrder($workOrder: CreateWorkOrderInput!) {\n    createWorkOrder(workOrder: $workOrder) {\n      ...WorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation UpdateWorkOrder($workOrderID: ID!, $workOrder: UpdateWorkOrderInput!) {\n    updateWorkOrder(workOrderID: $workOrderID, workOrder: $workOrder) {\n      ...WorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation UpdateWorkOrder($workOrderID: ID!, $workOrder: UpdateWorkOrderInput!) {\n    updateWorkOrder(workOrderID: $workOrderID, workOrder: $workOrder) {\n      ...WorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation CancelWorkOrder($workOrderID: ID!) {\n    cancelWorkOrder(workOrderID: $workOrderID) {\n      ... on DeleteMutationResponse {\n        id\n        wasDeleted\n      }\n      ... on WorkOrder {\n        ...WorkOrderFields\n      }\n    }\n  }\n  \n"): (typeof documents)["\n  mutation CancelWorkOrder($workOrderID: ID!) {\n    cancelWorkOrder(workOrderID: $workOrderID) {\n      ... on DeleteMutationResponse {\n        id\n        wasDeleted\n      }\n      ... on WorkOrder {\n        ...WorkOrderFields\n      }\n    }\n  }\n  \n"];
export function graphql(source: "\n  mutation SetWorkOrderStatusComplete($workOrderID: ID!) {\n    setWorkOrderStatusComplete(workOrderID: $workOrderID) {\n      ...WorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  mutation SetWorkOrderStatusComplete($workOrderID: ID!) {\n    setWorkOrderStatusComplete(workOrderID: $workOrderID) {\n      ...WorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  query WorkOrder($workOrderID: ID!) {\n    workOrder(workOrderID: $workOrderID) {\n      ...WorkOrderFields\n    }\n  }\n  \n"): (typeof documents)["\n  query WorkOrder($workOrderID: ID!) {\n    workOrder(workOrderID: $workOrderID) {\n      ...WorkOrderFields\n    }\n  }\n  \n"];
export function graphql(source: "\n  query MyWorkOrders {\n    myWorkOrders {\n      createdByUser {\n        ...WorkOrderFields\n      }\n      assignedToUser {\n        ...WorkOrderFields\n      }\n    }\n  }\n  \n"): (typeof documents)["\n  query MyWorkOrders {\n    myWorkOrders {\n      createdByUser {\n        ...WorkOrderFields\n      }\n      assignedToUser {\n        ...WorkOrderFields\n      }\n    }\n  }\n  \n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;